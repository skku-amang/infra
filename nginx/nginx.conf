events {
}

http {
  server {
    listen 80;
    listen 443 ssl;
    server_name json-server.duckdns.org;

    # SSL 인증서 설정
    ssl_certificate /etc/nginx/fullchain.pem;
    ssl_certificate_key /etc/nginx/privkey.pem;

    # HTTP를 HTTPS로 리다이렉트
    if ($scheme != "https") {
      return 301 https://$host$request_uri;
    }

    # API 요청을 백엔드로 프록시
    location /api/backend/auth/ {
      proxy_pass http://backend:8000/api/backend/auth/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      break;
    }

    # NextAuth.js 관련 라우트를 먼저 처리
    location /api/auth/ {
      proxy_pass http://frontend:3000/api/auth/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      break;
    }

    # 나머지 API 요청은 backend로 라우팅
    location /api/ {
      proxy_pass http://backend:8000/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      break;
    }

    # 프론트엔드 라우팅
    location / {
      proxy_pass http://frontend:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}