name: Deploy to Development Server

on:
  push:
    branches:
      - development
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  deployments: write

jobs:
  deploy:
    name: Deploy and Run Development Server
    runs-on: [self-hosted, development]
    environment:
      name: development
      url: https://amang-dev.json-server.win
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Stop existing containers
        run: docker-compose -f docker-compose-dev.yml down
        continue-on-error: true

      - name: Build and run Docker images
        run: docker-compose -f docker-compose-dev.yml up -d
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          SUPERUSER_EMAIL: ${{ secrets.SUPERUSER_EMAIL }}
          SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          DJANGO_CORS_ALLOWED_ORIGINS: ${{ secrets.DJANGO_CORS_ALLOWED_ORIGINS }}

          # MinIO 관련 환경 변수
          MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
          MINIO_API_PORT: ${{ secrets.MINIO_API_PORT }}
          MINIO_CONSOLE_PORT: ${{ secrets.MINIO_CONSOLE_PORT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MINIO_ROOT_USER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MINIO_ROOT_PASSWORD }}
          AWS_S3_ENDPOINT_URL: "http://minio:9000" # 컨테이너 내부 통신용

      - name: Verify deployment
        run: |
          echo "Waiting for services to start..."
          sleep 10
          if [ "$(docker ps -q -f name=backend)" ]; then
            echo "✅ backend is running"
          else
            echo "❌ Failed to start backend"
            exit 1
          fi
